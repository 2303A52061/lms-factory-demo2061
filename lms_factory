<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>LMS User Factory</title>
  <style>
    body { font-family: Arial, sans-serif; background:#f4f7fb; padding:20px; }
    .container { max-width:700px; margin:auto; }
    .card {
      background:#fff; padding:20px; border-radius:12px;
      box-shadow:0 4px 12px rgba(0,0,0,0.1); margin-bottom:20px;
    }
    h2 { text-align:center; color:#333; }
    .btn-group { text-align:center; margin-top:10px; }
    button {
      margin:5px; padding:10px 16px; border:none; border-radius:8px;
      font-weight:bold; cursor:pointer; transition:transform 0.2s;
    }
    button:hover { transform:scale(1.05); }
    button.student { background:#4caf50; color:white; }
    button.teacher { background:#2196f3; color:white; }
    button.admin { background:#ff5722; color:white; }
    input {
      width:100%; padding:10px; margin-top:10px; margin-bottom:10px;
      border-radius:6px; border:1px solid #ccc;
    }
    #userList {
      margin-top:15px; border-collapse: collapse; width:100%;
    }
    #userList th, #userList td {
      padding:10px; border-bottom:1px solid #ddd; text-align:left;
    }
    #userList th { background:#f0f0f0; }
    .delete-btn {
      background:#e91e63; color:white; border:none; padding:5px 10px;
      border-radius:6px; cursor:pointer;
    }
    #log {
      margin-top:15px; background:#000; color:#0f0; padding:10px; border-radius:6px;
      font-family:monospace; height:120px; overflow:auto;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="card">
      <h2>📚 LMS User Factory</h2>
      <p>Enter a name and choose a user type to add to the system:</p>
      <input type="text" id="username" placeholder="Enter user name" />
      <div class="btn-group">
        <button class="student" onclick="createUser('student')">Create Student</button>
        <button class="teacher" onclick="createUser('teacher')">Create Teacher</button>
        <button class="admin" onclick="createUser('admin')">Create Admin</button>
      </div>
    </div>

    <div class="card">
      <h3>👥 Users List</h3>
      <table id="userList">
        <thead>
          <tr>
            <th>Name</th>
            <th>Role</th>
            <th>Info</th>
            <th>Action</th>
          </tr>
        </thead>
        <tbody id="userTableBody">
          <tr><td colspan="4" style="text-align:center; color:#888;">No users yet</td></tr>
        </tbody>
      </table>
    </div>

    <div class="card">
      <h3>🖥 Console Log</h3>
      <pre id="log">Logs will appear here...</pre>
    </div>
  </div>

  <script>
    // Product classes
    class Student {
      constructor(name) { this.role = "Student"; this.name = name; }
      getInfo() { return "👨‍🎓 Can view courses"; }
    }
    class Teacher {
      constructor(name) { this.role = "Teacher"; this.name = name; }
      getInfo() { return "👩‍🏫 Can create and manage courses"; }
    }
    class Admin {
      constructor(name) { this.role = "Admin"; this.name = name; }
      getInfo() { return "🛠 Full system access"; }
    }

    // Factory
    class UserFactory {
      static createUser(type, name) {
        switch(type.toLowerCase()) {
          case "student": return new Student(name);
          case "teacher": return new Teacher(name);
          case "admin":   return new Admin(name);
          default: throw new Error("Unknown user type: " + type);
        }
      }
    }

    const users = [];

    function createUser(type) {
      const nameInput = document.getElementById("username");
      const name = nameInput.value.trim();
      if (!name) return alert("Please enter a name before creating a user.");

      try {
        const user = UserFactory.createUser(type, name);
        users.push(user);
        updateTable();
        log(`✅ Created ${user.role}: ${user.name} → ${user.getInfo()}`);
        nameInput.value = "";
      } catch (e) {
        log(`❌ Error: ${e.message}`);
      }
    }

    function updateTable() {
      const tbody = document.getElementById("userTableBody");
      tbody.innerHTML = "";

      users.forEach((user, index) => {
        const row = document.createElement("tr");
        row.innerHTML = `
          <td>${user.name}</td>
          <td>${user.role}</td>
          <td>${user.getInfo()}</td>
          <td><button class="delete-btn" onclick="deleteUser(${index})">Delete</button></td>
        `;
        tbody.appendChild(row);
      });

      if (users.length === 0) {
        tbody.innerHTML = `<tr><td colspan="4" style="text-align:center; color:#888;">No users yet</td></tr>`;
      }
    }

    function deleteUser(index) {
      const removed = users.splice(index, 1)[0];
      updateTable();
      log(`🗑 Deleted ${removed.role}: ${removed.name}`);
    }

    function log(message) {
      const logEl = document.getElementById("log");
      logEl.textContent += "\\n" + message;
      logEl.scrollTop = logEl.scrollHeight;
    }
  </script>
</body>
</html>
